name: (Dev) Build LineageOS

on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Set up JDK
      uses: actions/setup-java@main
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Initialization environment
      id: init
      env:
        DEBIAN_FRONTEND: noninteractive
      working-directory: /
      run: |
        echo -e "Current working directory: $(pwd)"

        packages_install=(
          "bc" 
          "bison" 
          "build-essential" 
          "ccache" 
          "curl" 
          "flex"
          "g++-multilib" 
          "gcc-multilib" 
          "git" 
          "git-lfs" 
          "gnupg"
          "gperf" 
          "imagemagick" 
          "lib32readline-dev" 
          "lib32z1-dev"
          "libelf-dev" 
          "liblz4-tool" 
          "libsdl1.2-dev" 
          "libssl-dev"
          "libxml2" 
          "libxml2-utils" 
          "lzop" 
          "pngcrush" 
          "rsync"
          "schedtool" 
          "squashfs-tools" 
          "xsltproc" 
          "zip" 
          "zlib1g-dev"
        )
        packages_extra=(
          "python3"
        )
        sudo -E apt-get -qq -y update
        sudo -E apt-get -qq -y install "${packages_install[@]}"
        sudo -E apt-get -y install "${packages_extra[@]}"
        sudo -E systemctl daemon-reload

        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Create simulated physical disk
      id: disk
      # if: ${{ 'true' == 'false' }} # disable
      env:
        path_build: /android/lineage
      working-directory: /
      run: |
        echo -e "Current working directory: $(pwd)"

        # 获取 /mnt 和 / 分区的剩余字节数，预留适当的缓冲空间
        mnt_size=$(expr $(df -B1 /mnt | tail -1 | awk '{print $4}') - 1*1024*1024*1024)
        root_size=$(expr $(df -B1 / | tail -1 | awk '{print $4}') - 4*1024*1024*1024)

        echo "Available space in /mnt (bytes): $mnt_size"
        echo "Available space in / (bytes): $root_size"

        # 动态选择更大分区来创建磁盘文件
        if [ "$mnt_size" -gt "$root_size" ]; then
            disk_size=$mnt_size
            disk_file="/mnt/mnt.img"
            echo "Using /mnt for virtual disk"
        else
            disk_size=$root_size
            disk_file="/root.img"
            echo "Using / for virtual disk"
        fi

        # 创建大小为 disk_size 的虚拟磁盘文件
        sudo truncate -s "${disk_size}" /${disk_file}
        
        # 将磁盘文件与 loop 设备关联，创建物理卷和卷组
        sudo losetup /dev/loop6 ${disk_file}
        sudo pvcreate /dev/loop6
        sudo vgcreate github /dev/loop6
        
        # 在卷组中创建逻辑卷，并在其上创建 XFS 文件系统
        sudo lvcreate -n runner -l 100%FREE github
        sudo mkfs.xfs /dev/github/runner
        
        # 挂载逻辑卷并更改目录权限
        sudo mkdir -p ${path_build}
        sudo mount /dev/github/runner ${path_build}
        sudo chown -R runner.runner ${path_build}

        # 打印当前分区信息，确认挂载成功
        df -Th
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Set up ccache
      id: ccache
      # if: ${{ 'true' == 'false' }} # disable
      working-directory: /
      run: |
        export USE_CCACHE=1
        export CCACHE_EXEC=/usr/bin/ccache
        ccache -M 50G

    - name: Initialize LineageOS source
      env:
        branch_lineage: lineage-18.1
      working-directory: /
      run: |
        mkdir -p ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        mkdir -p /android/lineage
        cd /android/lineage
        ~/bin/repo init -u https://github.com/LineageOS/android.git -b ${{ env.branch_lineage }} --git-lfs
        df -Th
        echo "Repository initialized"

    - name: Sync LineageOS source
      working-directory: /android/lineage
      run: |
        # cd /android/lineage
        # ~/bin/repo sync -j4
        ~/bin/repo sync -j$(($(nproc) + 1))
        echo "Source code synced"

    - name: Build LineageOS
      working-directory: /android/lineage
      run: |
        source build/envsetup.sh
        breakfast ginkgo
        croot
        brunch ginkgo
        echo "Build completed"

    - name: Upload OpenWrt to Release
      id: release
      uses: ncipollo/release-action@main
      with:
        name: "lineageos-build"
        tag: "lineageos"
        artifacts: "/android/lineage/out/target/product/ginkgo/*.zip"
        allowUpdates: true
        removeArtifacts: false
        replacesArtifacts: true
        token: "${{ secrets.GITHUB_TOKEN }}"
        # bodyFile: "${{ env.release_md }}"
        body: "lineageos"

